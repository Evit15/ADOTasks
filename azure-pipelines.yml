# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  - name: PublisherID
    value: Evit15
  - name: ExtensionID
    value: Evit15-build-release-task
  - name: ExtensionName
    value: Automation test tasks
  - name: artifactName
    value: vsixFile 
  - name: System.Debug
    value: true

stages:
  - stage: Run_and_publish_unit_tests
    jobs:
      - job:
        steps:
          - task: TfxInstaller@3
            inputs:
              version: "v0.7.x"
          - task: Npm@1
            inputs:
              command: 'install'
              workingDir: 'buildandreleasetask/GenerateTestRun' # Update to the name of the directory of your task
          - task: Npm@1
            inputs:
              command: 'install'
              workingDir: 'buildandreleasetask/SetTestRunStatus'
          - task: Npm@1
            inputs:
              command: 'install'
              workingDir: 'buildandreleasetask/SetAutomationStatus'
          - task: Bash@3
            displayName: Compile Javascript
            inputs:
              targetType: "inline"
              script: |
                echo "Compile GenerateTestRun"
                cd buildandreleasetask/GenerateTestRun 
                tsc
                echo "Compile SetTestRunStatus"
                cd ../..
                cd buildandreleasetask/SetTestRunStatus 
                tsc
                echo "Compile SetAutomationStatus"
                cd ../..
                cd buildandreleasetask/SetAutomationStatus 
                tsc
          # - task: Npm@1
          #   inputs:
          #     command: 'custom'
          #     workingDir: '/TestsDirectory' # Update to the name of the directory of your task's tests
          #     customCommand: 'testScript' # See the definition in the explanation section below - it may be called test
          # - task: PublishTestResults@2
          #   inputs:
          #     testResultsFormat: 'JUnit'
          #     testResultsFiles: '**/ResultsFile.xml'
  - stage: Package_extension_and_publish_build_artifacts
    jobs:
      - job:
        steps:
          - task: TfxInstaller@3
            inputs:
              version: "v0.7.x"
          - task: Npm@1
            inputs:
              command: 'install'
              workingDir: 'buildandreleasetask/GenerateTestRun' # Update to the name of the directory of your task
          - task: Npm@1
            inputs:
              command: 'install'
              workingDir: 'buildandreleasetask/SetTestRunStatus'
          - task: Npm@1
            inputs:
              command: 'install'
              workingDir: 'buildandreleasetask/SetAutomationStatus'
          - task: Bash@3
            displayName: Compile Javascript
            inputs:
              targetType: "inline"
              script: |
                echo "Compile GenerateTestRun"
                cd buildandreleasetask/GenerateTestRun 
                tsc
                echo "Compile SetTestRunStatus"
                cd ../..
                cd buildandreleasetask/SetTestRunStatus 
                tsc
                echo "Compile SetAutomationStatus"
                cd ../..
                cd buildandreleasetask/SetAutomationStatus 
                tsc
          - task: QueryAzureDevOpsExtensionVersion@3
            inputs:
              connectTo: 'VsTeam'
              connectedServiceName: 'marketplace' # Change to whatever you named the service connection
              publisherId: '$(PublisherID)'
              extensionId: '$(ExtensionID)'
              versionAction: 'Patch'
              outputVariable: 'Task.Extension.Version'
          - task: PackageAzureDevOpsExtension@3
            inputs:
              rootFolder: '$(System.DefaultWorkingDirectory)'
              publisherId: '$(PublisherID)'
              extensionId: '$(ExtensionID)'
              extensionName: '$(ExtensionName)'
              extensionVersion: '$(Task.Extension.Version)'
              updateTasksVersion: true
              updateTasksVersionType: 'patch'
              extensionVisibility: 'private' # Change to public if you're publishing to the marketplace
              extensionPricing: 'free'
          - task: CopyFiles@2
            displayName: "Copy Files to: $(Build.ArtifactStagingDirectory)"
            inputs:
              Contents: "**/*.vsix"
              TargetFolder: "$(Build.ArtifactStagingDirectory)"
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: '$(ArtifactName)'
              publishLocation: 'Container'
  - stage: Download_build_artifacts_and_publish_the_extension
    jobs:
      - job:
        steps:
          - task: TfxInstaller@3
            inputs:
              version: "v0.7.x"
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: "current"
              downloadType: "single"
              artifactName: "$(ArtifactName)"
              downloadPath: "$(System.DefaultWorkingDirectory)"
          - task: PublishAzureDevOpsExtension@3
            inputs:
              connectTo: 'VsTeam'
              connectedServiceName: 'marketplace' # Change to whatever you named the service connection
              fileType: 'vsix'
              vsixFile: '$(ArtifactName)/*.vsix'
              publisherId: '$(PublisherID)'
              extensionId: '$(ExtensionID)'
              extensionName: '$(ExtensionName)'
              updateTasksVersion: false
              extensionVisibility: 'public' # Change to public if you're publishing to the marketplace
              extensionPricing: 'free'